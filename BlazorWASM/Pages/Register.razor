@page "/Register"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@using BlazorWASM.Services
@inject IUserService userService;
@inject IAuthService authService;
@inject NavigationManager navigationManager;

<div class="card">
    <h3>Register</h3>
    <div class="form-group field">
        <label>Username:</label>
        <input type="text" @bind="username" @bind:event="oninput"/>
        
        <label>Password:</label>
        <input type="password" @bind="password" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Create" disabled="@(string.IsNullOrEmpty(username) && string.IsNullOrEmpty(password))" class="acceptbtn">Register</button>
    </div>
</div>

@code {
    private string username = "";
    private string password = "";
    private string resultMsg = "";
    private string color = "";
    
    private async Task Create()
    {
        resultMsg = "";

        try
        {
            await userService.Create(new UserCreationDto(username, password));
            await authService.LoginAsync(username, password);
            navigationManager.NavigateTo("/");
            username = "";
            password = "";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}